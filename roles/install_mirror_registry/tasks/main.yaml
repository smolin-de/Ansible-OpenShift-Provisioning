---
- name: Delete OCP download directory for idempotency.
  tags: get_ocp_disconnected
  become: true
  file:
    path: /root/disconnectedinstall
    state: absent

- name: Create OCP download directory
  tags: get_ocp_disconnected
  file:
    path: /root/disconnectedinstall
    state: directory

- name: Unzip OCP client and installer
  tags: get_ocp_disconnected
  ansible.builtin.unarchive:
    src: "{{ item }}"
    dest: /root/disconnectedinstall/
    remote_src: yes
  loop:
    - "{{ ocp_download_url }}{{ ocp_client_tgz }}"
    - "{{ ocp_download_url }}{{ ocp_install_tgz }}"

- name: Delete mirror-registry download directory for idempotency.
  tags: install_mirror_registry
  become: true
  file:
    path: /root/mirror_registry
    state: absent

- name: Create mirror-registry download directory.
  tags: install_mirror_registry
  file:
    path: /root/mirror_registry
    state: directory

- name: Unzip mirror registry package.
  tags: install_mirror_registry
  ansible.builtin.unarchive:
    src: "{{ mr_download_url }}"
    dest: /root/mirror_registry/
    remote_src: yes

- name: Create local mirror registry directory.
  tags: install_mirror_registry
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: 0775
  loop:
    - /opt/registry/certs
    - /opt/registry/data

- name: Generate SSL certificate for the registry.
  tags: install_mirror_registry
  become: true
  shell: openssl req -newkey rsa:4096 -nodes -sha256 -keyout /opt/registry/certs/domain.key -x509 -days 365 -out /opt/registry/certs/domain.crt -subj "/C=US/ST=New York/O=IBM/CN=$(hostname -f)" -addext "subjectAltName = DNS:$(hostname -f)"

- name: Copy the generated SSL certificate to the trusted CA certificates directory.
  tags: install_mirror_registry
  become: true
  shell: cp -f /opt/registry/certs/domain.crt /etc/pki/ca-trust/source/anchors/

- name: Update the system's certificate trust store.
  tags: install_mirror_registry
  become: true
  shell: update-ca-trust

- name: Save pull-secret to mirror_registry directory.
  ansible.builtin.copy:
    content: "{{ env.redhat.pull_secret }}"
    dest: /root/mirror_registry/pull-secret.json

- name: Check pull-secret files
  tags: install_mirror_registry
  become: true
  shell: |
    set -opipefail
    cat /root/mirror_registry/pull-secret.json | jq
  register: pullsecret

- name: Print pullsecret
  tags: install_mirror_registry
  debug:
    var: pullsecret.stdout_lines

- name: Copy kubectl, oc, and openshift-install binaries to /usr/local/sbin
  tags: get_ocp_disconnected
  become: true
  ansible.builtin.copy:
    src: /root/disconnectedinstall/{{ item }}
    dest: /usr/sbin/{{ item }}
    owner: root
    group: root
    mode: "755"
    remote_src: yes
  loop:
    - kubectl
    - oc
    - openshift-install

- name: Copy mirror-registry binaries to /usr/local/sbin
  tags: install_mirror_registry
  become: true
  ansible.builtin.copy:
    src: /root/mirror_registry/mirror-registry
    dest: /usr/sbin/mirror-registry
    owner: root
    group: root
    mode: "755"
    remote_src: yes

- name: Install mirror-registry with the hostname, you will see the public endpoint for this registry. With credential generated.
  tags: install_mirror_registry
  become: true
  shell: /root/mirror_registry/mirror-registry install --quayHostname $(hostname -f) --initUser multiarch --initPassword pass4multi --quayRoot /opt/registry/data --sslCert /opt/registry/certs/domain.crt --sslKey /opt/registry/certs/domain.key

- name: Capture hostname
  shell: hostname -f
  register: hostname_result

- name: Set local_registry variable
  set_fact:
    local_registry: "{{ hostname_result.stdout }}:8443"

- name: Login with authfile, and it will automatically include the login credential for this registry
  tags: install_mirror_registry
  become: true
  shell: podman login -u multiarch -p pass4multi --authfile /root/mirror_registry/pull-secret.json "{{ local_registry.stdout }}"

- name: Check pull-secret files
  tags: install_mirror_registry
  become: true
  shell: |
    set -opipefail
    cat /root/mirror_registry/pull-secret.json | jq
  register: pullsecret

- name: Print pullsecret
  tags: install_mirror_registry
  debug:
    var: pullsecret.stdout_lines

- name: Mirror the version images to the mirror registry.
  tags: install_mirror_registry
  become: true
  shell: | 
    oc adm release mirror -a /root/mirror_registry/pull-secret.json \
      --from=quay.io/"{{ mr_product_repo }}"/"{{ mr_release_name }}":"{{ mr_ocp_release }}"-"{{ mr_architecture }}" \
      --to="{{ local_registry.stdout }}"/"{{ mr_local_repository }}" \
      --to-release-image="{{ local_registry.stdout }}"/"{{ mr_local_repository }}":"{{ mr_ocp_release }}"-"{{ mr_architecture }}" \
      --keep-manifest-list
