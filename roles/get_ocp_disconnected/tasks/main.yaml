---
- name: Delete ignition folder for idempotency
  tags: get_ocp_disconnected
  file:
    path: /var/www/html/ignition
    state: absent

- name: Create directory bin for mirrors
  tags: get_ocp_disconnected
  become: true
  file:
    path: /var/www/html/bin
    state: directory
    mode: "0755"
    owner: "root"
    group: "root"

- name: Delete OCP download directory for idempotency, because ignition files deprecate after 24 hours.
  tags: get_ocp_disconnected
  become: true
  file:
    path: /root/disconnectedinstall
    state: absent

- name: Create OCP download directory
  tags: get_ocp_disconnected
  file:
    path: /root/disconnectedinstall
    state: directory

- name: Get Red Hat CoreOS rootfs file if it's not there already.
  tags: get_ocp_disconnected
  get_url:
    url: "{{ rhcos_download_url }}{{ rhcos_live_rootfs }}"
    dest: "/var/www/html/bin/{{ rhcos_live_rootfs }}"
    mode: "0644"

- name: Unzip OCP client and installer
  tags: get_ocp_disconnected
  ansible.builtin.unarchive:
    src: "{{ item }}"
    dest: /root/disconnectedinstall/
    remote_src: yes
  loop:
    - "{{ ocp_download_url }}{{ ocp_client_tgz }}"
    - "{{ ocp_download_url }}{{ ocp_install_tgz }}"

- name: Copy kubectl, oc, and openshift-install binaries to /usr/local/sbin
  tags: get_ocp_disconnected
  become: true
  ansible.builtin.copy:
    src: /root/disconnectedinstall/{{ item }}
    dest: /usr/sbin/{{ item }}
    owner: root
    group: root
    mode: "755"
    remote_src: yes
  loop:
    - kubectl
    - oc
    - openshift-install

## TODO: find a way to register the password of mirror-registry


## TODO: Login with authfile, and it will automatically include the login credential for this registry
# podman login -u init --authfile  /root/mirror_registry/pull-secret.json $(hostname -f):8443


## TODO: Validate again if the pull-secret is updated.
# cat  /root/mirror_registry/pull-secret.json | jq


## TODO: Think carefully !!!... Need to overwritten the install-config yaml with : pull-secret, addtionalCert, ImageSources...
- name: Use template file to create install-config and backup.
  tags: get_ocp_disconnected, patch_install_config
  vars:
    use_proxy: "{{ 'True' if (proxy_env.http_proxy is defined or proxy_env.https_proxy is defined or proxy_env.no_proxy is defined) else 'False' }}"
  template:
    src: install-config.yaml.j2
    dest: "{{ item }}"
    force: yes
  loop:
    - /root/disconnectedinstall/install-config.yaml
    - /root/disconnectedinstall/install-config-backup.yaml


##### After patched the install-config.yaml, the rests remain the same !!


- name: Capture OCP public key
  tags: get_ocp_disconnected
  command: cat /root/.ssh/id_rsa.pub
  register: ocp_pub_key

- name: Place SSH key in install-config
  tags: get_ocp_disconnected, patch_install_config
  lineinfile:
    line: "sshKey: '{{ ocp_pub_key.stdout }}'"
    path: "{{ item }}"
  loop:
    - /root/disconnectedinstall/install-config.yaml
    - /root/disconnectedinstall/install-config-backup.yaml

- name: Create manifests
  tags: get_ocp_disconnected
  command: /root/disconnectedinstall/openshift-install create manifests --dir=/root/disconnectedinstall/
  become: true

- name: Set masters schedulable parameter to false
  tags: get_ocp_disconnected
  become: true
  replace:
    path: /root/disconnectedinstall/manifests/cluster-scheduler-02-config.yml
    regexp: ": true"
    replace: ": false"

- name: Set permissions for disconnectedinstall directory contents to root
  tags: get_ocp_disconnected
  become: true
  command: chmod 0755 /root/disconnectedinstall/{{item}}
  loop:
    - manifests
    - openshift
    - .openshift_install.log
    - .openshift_install_state.json

- name: Set ownership of disconnectedinstall directory contents to root
  tags: get_ocp_disconnected
  become: true
  command: chown root:root /root/disconnectedinstall/{{item}}
  loop:
    - manifests
    - openshift
    - .openshift_install.log
    - .openshift_install_state.json

- name: Create ignition files
  tags: get_ocp_disconnected
  become: true
  command: /root/disconnectedinstall/openshift-install create ignition-configs  --dir=/root/disconnectedinstall/

- name: Set ownership to root and permissions of ignitions and related files.
  tags: get_ocp_disconnected
  file:
    state: "{{ item.state }}"
    path: /root/disconnectedinstall/{{ item.path }}
    owner: root
    group: root
    mode: "{{ item.mode }}"
  loop:
    - { state: file, path: bootstrap.ign, mode: "755" }
    - { state: file, path: master.ign, mode: "755" }
    - { state: file, path: worker.ign, mode: "755" }
    - { state: directory, path: auth, mode: "755" }
    - { state: file, path: metadata.json, mode: "755" }
    - { state: file, path: auth/kubeconfig, mode: "644" }
    - { state: file, path: auth/kubeadmin-password, mode: "644" }

- name: Create directory in admin user's home for default kubeconfig.
  tags: get_ocp_disconnected, config
  become: false
  file:
    state: directory
    path: ~/.kube

- name: Create directory in root's home for default kubeconfig.
  tags: get_ocp_disconnected, config
  become: true
  file:
    state: directory
    path: ~/.kube

- name: Make kubeconfig admin user's default (for non-root user).
  tags: get_ocp_disconnected, config
  copy:
    src: /root/disconnectedinstall/auth/kubeconfig
    dest: /home/{{ env.bastion.access.user }}/.kube/config
    owner: "{{ env.bastion.access.user }}"
    group: "{{ env.bastion.access.user }}"
    remote_src: yes
  when: env.bastion.access.user != "root"

- name: Make kubeconfig admin user's default (for root user).
  tags: get_ocp_disconnected, config
  copy:
    src: /root/disconnectedinstall/auth/kubeconfig
    dest: /{{ env.bastion.access.user }}/.kube/config
    owner: "{{ env.bastion.access.user }}"
    group: "{{ env.bastion.access.user }}"
    remote_src: yes
  when: env.bastion.access.user == "root"

- name: Make kubeconfig root user's default.
  tags: get_ocp_disconnected, config
  copy:
    src: /root/disconnectedinstall/auth/kubeconfig
    dest: /root/.kube/config
    owner: root
    group: root
    remote_src: yes

- name: Create ignition directory in HTTP-accessible directory.
  tags: get_ocp_disconnected
  become: true
  file:
    path: /var/www/html/ignition
    state: directory

- name: Copy ignition files to HTTP-accessible directory.
  tags: get_ocp_disconnected
  become: true
  copy:
    src: /root/disconnectedinstall/{{ item }}.ign
    dest: /var/www/html/ignition
    remote_src: yes
    mode: "775"
    group: root
    owner: root
  loop:
    - bootstrap
    - master
    - worker
