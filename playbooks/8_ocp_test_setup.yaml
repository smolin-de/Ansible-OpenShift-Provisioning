---

# Setup environment to test OCP
- name: 8 Setup OCP test environment
  hosts: bastion
  become: true
#  environment:
#    KUBECONFIG: "{{ '/home/' if (env.bastion.access.user != 'root') else '/'}}{{ env.bastion.access.user }}/.kube/config"
  gather_facts: false
  vars_files:
    - "{{ inventory_dir }}/group_vars/all.yaml"
  tasks:
    - name: Setup bastion '/root/.ssh/config' file and print current content
      when: false
      become: true
      block:
        - name: Setup bastion '/root/.ssh/config' file
          ansible.builtin.lineinfile:
            path: /root/.ssh/config
            regexp: "{{ item.regexp }}"
            line: "{{ item.line }}"
            state: present
          loop:
            - { regexp: "^UserKnownHostsFile=", line: "UserKnownHostsFile=/dev/null" }
            - { regexp: "^StrictHostKeyChecking", line: "StrictHostKeyChecking=no" }

        - name: Get '/root/.ssh/config'
          ansible.builtin.command: cat /root/.ssh/config
          changed_when: false
          register: cmd_output

        - name: Print '/root/.ssh/config'
          ansible.builtin.debug:
            var: cmd_output.stdout_lines

    - name: Get OCP cluster ".kube/config" and store file into "~/.kube/ocp.config"
      ansible.builtin.fetch:
        src: "{{ '/home/' if (env.bastion.access.user != 'root') else '/' }}{{ env.bastion.access.user }}/.kube/config"
        # Use hardcoded filename. The user can rename the file later, if required
        dest: "~/.kube/ocp.config"
        flat: true
